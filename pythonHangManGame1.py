{"cells":[{"cell_type":"code","execution_count":1,"source":["# Create a hangman game and allow the user to guess letters\n","\n","\n","import random\n","\n","\n","def main():\n","    # Create a list of words to choose from\n","    word_list = [\"fraud\", \"collusion\", \"sybil\", \"moloch, ethbot\"]\n","\n","    # Choose a random word from the list\n","    word = random.choice(word_list)\n","\n","    # Create an empty list to store the letters of the word\n","    word_list = []\n","\n","    # Create a list of letters in the word\n","    for letter in word:\n","        word_list.append(letter)\n","\n","    # Create a list of letters that have been guessed\n","    guessed_letters = []\n","\n","    # Create a list of letters that have not been guessed\n","    unguessed_letters = []\n","\n","    # Create a list of underscores corresponding to the letters in the word\n","    for letter in word:\n","        unguessed_letters.append(\"_\")\n","\n","    # Print the word\n","    print(\" \".join(unguessed_letters))\n","\n","    # Create a variable to track the number of guesses\n","    guesses = 0\n","\n","    # Create a while loop to continue until the user guesses all the letters\n","    while unguessed_letters != word_list:\n","        # Get the user's guess\n","        guess = input(\"Guess a letter: \")\n","\n","        # Check if the user has guessed the letter\n","        if guess in guessed_letters:\n","            print(\"You already guessed that letter\")\n","        else:\n","            # Add the letter to the list of guessed letters\n","            guessed_letters.append(guess)\n","\n","            # Check if the letter is in the word\n","            if guess in word_list:\n","                # If the letter is in the word, replace the underscore with the letter\n","                for i in range(len(word_list)):\n","                    if guess == word_list[i]:\n","                        unguessed_letters[i] = guess\n","            else:\n","                # If the letter is not in the word, add one to the number of guesses\n","                guesses += 1\n","\n","        # Print the word\n","        print(\" \".join(unguessed_letters))\n","\n","    # Check if the user won or lost\n","    if guesses == 6:\n","        print(\"You lost!\")\n","    else:\n","        print(\"You won!\")\n","\n","\n","if __name__ == \"__main__\":\n","    main()"],"outputs":[{"output_type":"stream","name":"stdout","text":["_ _ _ _ _\n","_ _ _ _ _\n","_ _ _ _ _\n","_ _ _ _ _\n","f _ _ _ _\n","f r _ _ _\n","f r a _ _\n","f r a u _\n","f r a u d\n","You won!\n"]}],"metadata":{}},{"cell_type":"code","execution_count":2,"source":["# Create a hangman game and allow the user to guess letters\n","\n","\n","import random\n","\n","\n","def main():\n","    # Create a list of words to choose from\n","    word_list = [\"fraud\", \"collusion\", \"sybil\", \"moloch, ethbot\"]\n","\n","    # Choose a random word from the list\n","    word = random.choice(word_list)\n","\n","    # Create an empty list to store the letters of the word\n","    word_list = []\n","\n","    # Create a list of letters in the word\n","    for letter in word:\n","        word_list.append(letter)\n","\n","    # Create a list of letters that have been guessed\n","    guessed_letters = []\n","\n","    # Create a list of letters that have not been guessed\n","    unguessed_letters = []\n","\n","    # Create a list of underscores corresponding to the letters in the word\n","    for letter in word:\n","        unguessed_letters.append(\"_\")\n","\n","    # Print the word\n","    print(\" \".join(unguessed_letters))\n","\n","    # Create a variable to track the number of guesses\n","    guesses = 0\n","\n","    # Create a while loop to continue until the user guesses all the letters\n","    while unguessed_letters != word_list:\n","        # Get the user's guess\n","        guess = input(\"Guess a letter: \")\n","\n","        # Check if the user has guessed the letter\n","        if guess in guessed_letters:\n","            print(\"You already guessed that letter\")\n","        else:\n","            # Add the letter to the list of guessed letters\n","            guessed_letters.append(guess)\n","\n","            # Check if the letter is in the word\n","            if guess in word_list:\n","                # If the letter is in the word, replace the underscore with the letter\n","                for i in range(len(word_list)):\n","                    if guess == word_list[i]:\n","                        unguessed_letters[i] = guess\n","            else:\n","                # If the letter is not in the word, add one to the number of guesses\n","                guesses += 1\n","\n","        # Print the word\n","        print(\" \".join(unguessed_letters))\n","\n","    # Check if the user won or lost\n","    if guesses == 6:\n","        print(\"You lost!\")\n","    else:\n","        print(\"You won!\")\n","\n","\n","if __name__ == \"__main__\":\n","    main()"],"outputs":[{"output_type":"stream","name":"stdout","text":["_ _ _ _ _\n","_ _ _ _ _\n","f _ _ _ _\n","f r _ _ _\n","f r a _ _\n","f r a u _\n","f r a u d\n","You won!\n"]}],"metadata":{}},{"cell_type":"code","execution_count":3,"source":["# Create a hangman game and allow the user to guess letters\n","\n","\n","import random\n","\n","\n","def main():\n","    # Create a list of words to choose from\n","    word_list = [\"fraud\", \"collusion\",\"sybil\",\"moloch\",\"ethbot\"]\n","\n","    # Choose a random word from the list\n","    word = random.choice(word_list)\n","\n","    # Create an empty list to store the letters of the word\n","    word_list = []\n","\n","    # Create a list of letters in the word\n","    for letter in word:\n","        word_list.append(letter)\n","\n","    # Create a list of letters that have been guessed\n","    guessed_letters = []\n","\n","    # Create a list of letters that have not been guessed\n","    unguessed_letters = []\n","\n","    # Create a list of underscores corresponding to the letters in the word\n","    for letter in word:\n","        unguessed_letters.append(\"_\")\n","\n","    # Print the word\n","    print(\" \".join(unguessed_letters))\n","\n","    # Create a variable to track the number of guesses\n","    guesses = 0\n","\n","    # Create a while loop to continue until the user guesses all the letters\n","    while unguessed_letters != word_list:\n","        # Get the user's guess\n","        guess = input(\"Guess a letter: \")\n","\n","        # Check if the user has guessed the letter\n","        if guess in guessed_letters:\n","            print(\"You already guessed that letter\")\n","        else:\n","            # Add the letter to the list of guessed letters\n","            guessed_letters.append(guess)\n","\n","            # Check if the letter is in the word\n","            if guess in word_list:\n","                # If the letter is in the word, replace the underscore with the letter\n","                for i in range(len(word_list)):\n","                    if guess == word_list[i]:\n","                        unguessed_letters[i] = guess\n","            else:\n","                # If the letter is not in the word, add one to the number of guesses\n","                guesses += 1\n","\n","        # Print the word\n","        print(\" \".join(unguessed_letters))\n","\n","    # Check if the user won or lost\n","    if guesses == 6:\n","        print(\"You lost!\")\n","    else:\n","        print(\"You won!\")\n","\n","\n","if __name__ == \"__main__\":\n","    main()"],"outputs":[{"output_type":"stream","name":"stdout","text":["_ _ _ _ _ _\n","m _ _ _ _ _\n","m o _ o _ _\n","m o l o _ _\n","m o l o c _\n","m o l o c h\n","You won!\n"]}],"metadata":{}}],"nbformat":4,"nbformat_minor":2,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":3},"orig_nbformat":4}}